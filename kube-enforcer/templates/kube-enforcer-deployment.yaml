apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: {{ .Release.Name }}
    app: {{ include "kube-enforcer.fullname" . }}
  name: {{ include "kube-enforcer.fullname" . }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ include "kube-enforcer.fullname" . }}
    spec:
      {{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: kube-enforcer
          {{- with .Values.container_securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
{{- with .Values.livenessProbe }}
          livenessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.readinessProbe }}
          readinessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
          env:
            - name: AQUA_TOKEN
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.aquaSecret.name }}
                  key: token      
            - name: AQUA_ENABLE_CACHE
              value: "{{ .Values.aqua_enable_cache }}"
            - name: AQUA_CACHE_EXPIRATION_PERIOD
              value: "{{ .Values.aqua_cache_expiration_period }}"
            - name: TLS_SERVER_CERT_FILEPATH
              value: /certs/server.crt
            - name: TLS_SERVER_KEY_FILEPATH
              value: /certs/server.key
            - name: AQUA_GATEWAY_SECURE_ADDRESS
              value: {{ .Values.envs.gatewayAddress }}
            - name: AQUA_TLS_PORT
              value: "8443"
            - name: SCALOCK_LOG_LEVEL
              value: {{ .Values.logLevel | default "INFO" }}
              {{- if .Values.TLS.enabled }}
            - name: "AQUA_PRIVATE_KEY"
              value: "/opt/aquasec/ssl/key.pem"
            - name: "AQUA_PUBLIC_KEY"
              value: "/opt/aquasec/ssl/cert.pem"
            - name: "AQUA_ROOT_CA"
              value: "/opt/aquasec/ssl/ca.pem"
            - name: "AQUA_TLS_VERIFY"
              value: {{ .Values.TLS.tls_verify | quote }}
              {{- end }}
            {{- include "kube-enforcer.extraEnvironmentVars" .Values | nindent 12 }}
            {{- include "kube-enforcer.extraSecretEnvironmentVars" .Values | nindent 12 }}
          volumeMounts:
            - name: "certs"
              mountPath: "/certs"
            {{- if .Values.TLS.enabled }}
            - name: certs
              mountPath: /opt/aquasec/ssl/
              readOnly: true
            {{- end }}
      volumes:
        - name: "certs"
          secret:
            secretName: {{ .Values.certsSecret.name }}
        {{- if .Values.TLS.enabled }}
        - name: certs
          secret:
            defaultMode: 420
            secretName: {{ .Values.TLS.secretName }}
            items:
            - key: {{ .Values.TLS.publicKey_fileName }}
              path: cert.pem
            - key: {{ .Values.TLS.privateKey_fileName }}
              path: key.pem
            {{- if .Values.TLS.rootCA_fileName }}
            - key: {{ .Values.TLS.rootCA_fileName }}
              path: ca.pem
            {{- end }}
        {{- end }}
  selector:
    matchLabels:
      app: {{ include "kube-enforcer.fullname" . }}
